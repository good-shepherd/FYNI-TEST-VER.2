<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fyni.mapper.eventMapper">

	<insert id="eventCreate">
	insert into
	event(event_Title, event_Content, event_WhenBegins, event_WhenEnds, category_ID, user_ID, event_Address, event_Picture, event_Location)
	values (#{event_Title}, #{event_Content}, #{event_WhenBegins}, #{event_WhenEnds}, #{category_ID}, #{user_ID}, #{event_Address}, #{event_Picture}, Point(#{event_LocationX}, #{event_LocationY}))
	</insert>
	
	<update id="eventUpdate" parameterType="com.fyni.domain.EventDTO">
		update event set
		event_Title = #{event_Title},
		event_Content = #{event_Content},
		event_WhenBegins = #{event_WhenBegins},
		event_WhenEnds = #{event_WhenEnds},
		category_ID = #{category_ID},
		event_Address = #{event_Address},
		event_Location = Point(#{event_LocationX}, #{event_LocationY})
		where event_ID = #{event_ID}
	</update>
	<select id="eventRead" resultType="com.fyni.domain.EventDTO">
		select event_ID, event_Title, event_Content, event_Up, event_Down, event_WrittenWhen, event_Picture, category_ID, user_ID, event_Hit, event_WhenBegins, event_WhenEnds, event_Address, X(event_Location) as `event_LocationX`, Y(event_Location) as `event_LocationY`
		from event
		where event_ID = #{event_ID};
		update event set event_Hit = event_Hit + 1 where event_ID = #{event_ID};
	</select>
	
	<select id="eventReadAllLen" resultType="com.fyni.domain.EventDTO">
		select event_ID, event_Title, event_Content, event_Up, event_Down, event_WrittenWhen, event_Picture, category_ID, user_ID, event_Hit, event_WhenBegins, event_WhenEnds, event_Address, X(event_Location) as `event_LocationX`, Y(event_Location) as `event_LocationY` from event
	</select>
	<select id="eventReadAll" resultType="com.fyni.domain.EventDTO">
		select event_ID, event_Title, event_Content, event_Up, event_Down, event_WrittenWhen, event_Picture, category_ID, user_ID, event_Hit, event_WhenBegins, event_WhenEnds, event_Address, X(event_Location) as `event_LocationX`, Y(event_Location) as `event_LocationY` from event
		limit #{page}, #{pagepernum}
	</select>
	<select id="eventReadByCategoryLen" resultType="com.fyni.domain.EventDTO">
		select event_ID, event_Title, event_Content, event_Up, event_Down, event_WrittenWhen, event_Picture, category_ID, user_ID, event_Hit, event_WhenBegins, event_WhenEnds, event_Address, X(event_Location) as `event_LocationX`, Y(event_Location) as `event_LocationY` from event
		where category_ID = 
			(select category_ID
	  		 from event_category
			 where category_name = #{category_name})
	</select>
	<select id="eventReadByCategory" resultType="com.fyni.domain.EventDTO">
		select event_ID, event_Title, event_Content, event_Up, event_Down, event_WrittenWhen, event_Picture, category_ID, user_ID, event_Hit, event_WhenBegins, event_WhenEnds, event_Address, X(event_Location) as `event_LocationX`, Y(event_Location) as `event_LocationY` from event
		where category_ID = 
			(select category_ID
	  		 from event_category
			 where category_name = #{category_name})
		limit #{page}, #{pagepernum}
	</select>
	<select id="eventUserOwn" resultType="com.fyni.domain.EventDTO">
		select * from event where user_ID = #{user_ID}
	</select>

	<!-- <select id="eventInCircle">
	SELECT event_id, ( 6371 * acos( cos( radians(#{event_LocationY}) ) * cos( radians( Y(event_Location) ) ) * cos( radians( X(event_Location) ) - radians(#{event_LocationX}) ) + sin( radians(#{event_LocationY}) ) * sin( radians( Y(event_Location) ) ) ) ) 
	AS distance 
	FROM event 
	HAVING distance < 10 
	ORDER BY distance 
	LIMIT 0, 5
	</select> -->

	<delete id="eventDelete">
		delete from comment where event_ID = #{event_ID};
		delete from event where event_ID = #{event_ID};
	</delete>
	<update id="eventUpDown">
		update event set
		event_Up = #{event_Up},
		event_Down =
		#{event_Down}
	</update>
</mapper>